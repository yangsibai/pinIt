// Generated by CoffeeScript 1.7.1
(function() {
  var getPin, newPin;

  chrome.browserAction.onClicked.addListener(function(tab) {
    if (tab) {
      return chrome.tabs.sendMessage(tab.id, {
        pins: getPin(tab.url)
      }, function(data) {
        return console.dir(data);
      });
    }
  });

  chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {
    request.data.url = sender.url;
    request.data.title = sender.tab.title;
    return newPin(request.data);
  });

  newPin = function(data) {
    var foundPIN, foundURL, item, pin, storage, _i, _j, _len, _len1, _ref;
    if (localStorage && localStorage.data) {
      storage = JSON.parse(localStorage.data);
    } else {
      storage = [];
    }
    for (_i = 0, _len = storage.length; _i < _len; _i++) {
      item = storage[_i];
      if (item.url === data.url) {
        foundURL = true;
        _ref = item.pins;
        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
          pin = _ref[_j];
          if (pin.x === data.x && pin.y === data.y) {
            foundPIN = true;
            pin.text = data.text;
            break;
          }
        }
        if (!foundPIN) {
          item.pins.push({
            x: data.x,
            y: data.y,
            text: data.text
          });
        }
        break;
      }
    }
    if (!foundURL) {
      storage.push({
        url: data.url,
        title: data.title,
        pins: [
          {
            x: data.x,
            y: data.y,
            text: data.text
          }
        ]
      });
    }
    return localStorage.data = JSON.stringify(storage);
  };

  getPin = function(url) {
    var item, storage, _i, _len;
    if (localStorage && localStorage.data) {
      storage = JSON.parse(localStorage.data);
      for (_i = 0, _len = storage.length; _i < _len; _i++) {
        item = storage[_i];
        if (item.url === url) {
          return item.pins;
        }
      }
    }
    return [];
  };

}).call(this);

//# sourceMappingURL=background.map
